<?php

/*
  Make use of the CTools jump menu and grabs from an existing menu.
  See: modules/ctools/includes/jump-menu.inc
  // NOTE: Menu items must be checked as "expanded" for traversing to work.
*/
function jump_menu($menu, $parent, $maxDepth = 0, $choose = 'Select a destination') {
    
    ctools_include('jump-menu');
    // Load up the menu.
    $menu = menu_tree_page_data($menu);
    // Trim to the needed portion, start at parent menuID.
    foreach($menu as $m) {
        if ($m['link']['mlid'] == $parent) { // mlid is i18n tranlsation friendly.
            $menu = $m['below'];
            break;
        }
    }
    // Initialize
    $depths = array('current' => 0, 'max' => $maxDepth);
    $targets = array();
    // Build the jump options from the menu 
    _jump_menu_create_options($targets, $menu, $depths);

    // Output
    if (count($targets) == 0) {
        return 'Jump menu contains no items!';
    } else {
        //return jump_quickly($targets, 'custom', TRUE); // Uses the Jump module.
        $options = array(
            'choose' => t($choose),
            //'title' => The text to display for the #title attribute.
            //'description': The text to display for the #description attribute.
            //'default_value': The text to display for the #default_value attribute.
            'hide' => true, // If TRUE the go button will be set to hide via javascript and will submit on change.
            //'button': The text to display on the button.
            //'image': If set, an image button will be used instead, and the image set to this.
            //'inline': If set to TRUE (default) the display will be forced inline.   
        );
        return drupal_get_form('ctools_jump_menu', $targets, $options);
    }

}

// Recursive menu to select option building.
function _jump_menu_create_options(&$t, &$m, &$d) {
    foreach ($m as $item) { // set the option
        
        // Add depth indicators to titles.
        if($d['current'] > 0) {
            $title = ' '. str_repeat('-', $d['current']) .' '. $item['link']['title'];
        } else {
            $title = $item['link']['title'];
        }
        
        // Add to targets
        // Allow for special menu item dummy items for grouping
        if (module_exists('special_menu_items') && $item['link']['page_callback'] == 'special_menu_items_dummy') {
            // Create a dummy option using optgroups.
            $t[ t($title) ] = array();
        } else {
            // Create a normal option.
            $t[ url($item['link']['href']) ] = t($title);
        }
        
         // Loop deeper if there is no max or we haven't reached it.
        if ($item['below'] && ($d['max'] == 0 || $d['current'] < $d['max'])) {
            $d['current']++; // Drop current depth.
            _jump_menu_create_options($t, $item['below'], $d);
        }   
    }
    $d['current']--; // Raise current depth back up.
}